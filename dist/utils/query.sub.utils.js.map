{
  "version": 3,
  "sources": ["../../src/utils/query.sub.utils.ts"],
  "sourcesContent": ["import memoize from 'moize'\nimport { parseFilter } from 'mongodb-query-parser'\nimport { IGetQueryOptions } from '../mrq.interfaces'\nimport { memoOptions } from '../mrq.config'\nimport { getSelect, getSort } from './query.utils'\n\nconst sortMap = {\n  '1': 'asc',\n  '-1': 'desc',\n}\n\nexport const getQueryForSubarray = memoize(getQueryForSubarray_, memoOptions)\n\nfunction getQueryForSubarray_(query: any, options: IGetQueryOptions = {}) {\n  const filterStr =\n    typeof query.filter !== 'string'\n      ? JSON.stringify(query.filter)\n      : query.filter\n\n  const filter = parseFilter(filterStr) ?? {}\n\n  const sort = getSortForSubArray(query.sort)\n\n  const select = getSelectForSubArray(query.select, options)\n\n  const skip = query.skip ? parseInt(query.skip) : 0\n\n  const limit = query.limit ? parseInt(query.limit) : Infinity\n\n  return {\n    filter,\n    sort,\n    select,\n    skip,\n    limit,\n  }\n}\n\nfunction getSelectForSubArray(select: string, options: IGetQueryOptions = {}) {\n  if (options.ignoreSelect) return null\n\n  const selectObject = getSelect(select)\n\n  const selectArr = []\n\n  for (const path in selectObject)\n    if (selectObject[path] === 1) selectArr.push(path)\n\n  if (!selectArr.includes('_id')) selectArr.push('_id')\n\n  return selectArr\n}\n\nfunction getSortForSubArray(sort: string) {\n  const sortObject: { [key: string]: '1' | '-1' } = getSort(sort)\n\n  const sortFieldsArr = []\n  const sortOrderArr = []\n\n  for (const sortField in sortObject) {\n    sortFieldsArr.push(sortField)\n    sortOrderArr.push(sortMap[sortObject[sortField] as keyof typeof sortMap])\n  }\n\n  return {\n    sortFieldsArr,\n    sortOrderArr,\n  }\n}\n"],
  "mappings": ";AAAA,OAAO,aAAa;AACpB,SAAS,mBAAmB;AAE5B,SAAS,mBAAmB;AAC5B,SAAS,WAAW,eAAe;AAEnC,IAAM,UAAU;AAAA,EACd,KAAK;AAAA,EACL,MAAM;AACR;AAEO,IAAM,sBAAsB,QAAQ,sBAAsB,WAAW;AAE5E,SAAS,qBAAqB,OAAY,UAA4B,CAAC,GAAG;AACxE,QAAM,YACJ,OAAO,MAAM,WAAW,WACpB,KAAK,UAAU,MAAM,MAAM,IAC3B,MAAM;AAEZ,QAAM,SAAS,YAAY,SAAS,KAAK,CAAC;AAE1C,QAAM,OAAO,mBAAmB,MAAM,IAAI;AAE1C,QAAM,SAAS,qBAAqB,MAAM,QAAQ,OAAO;AAEzD,QAAM,OAAO,MAAM,OAAO,SAAS,MAAM,IAAI,IAAI;AAEjD,QAAM,QAAQ,MAAM,QAAQ,SAAS,MAAM,KAAK,IAAI;AAEpD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEA,SAAS,qBAAqB,QAAgB,UAA4B,CAAC,GAAG;AAC5E,MAAI,QAAQ,aAAc,QAAO;AAEjC,QAAM,eAAe,UAAU,MAAM;AAErC,QAAM,YAAY,CAAC;AAEnB,aAAW,QAAQ;AACjB,QAAI,aAAa,IAAI,MAAM,EAAG,WAAU,KAAK,IAAI;AAEnD,MAAI,CAAC,UAAU,SAAS,KAAK,EAAG,WAAU,KAAK,KAAK;AAEpD,SAAO;AACT;AAEA,SAAS,mBAAmB,MAAc;AACxC,QAAM,aAA4C,QAAQ,IAAI;AAE9D,QAAM,gBAAgB,CAAC;AACvB,QAAM,eAAe,CAAC;AAEtB,aAAW,aAAa,YAAY;AAClC,kBAAc,KAAK,SAAS;AAC5B,iBAAa,KAAK,QAAQ,WAAW,SAAS,CAAyB,CAAC;AAAA,EAC1E;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;",
  "names": []
}
