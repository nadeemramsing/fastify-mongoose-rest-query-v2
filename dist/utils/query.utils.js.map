{
  "version": 3,
  "sources": ["../../src/utils/query.utils.ts"],
  "sourcesContent": ["import memoize from 'moize'\nimport { FastifyRequest } from 'fastify'\nimport { httpErrors } from '@fastify/sensible'\nimport { parseFilter, parseSort, parseProject } from 'mongodb-query-parser'\nimport { IMPLICIT_SELECT_ALL_NOT_ALLOWED } from '../mrq.errors'\nimport { IGetQueryOptions, MrqQuery } from '../mrq.interfaces'\nimport { memoOptions } from '../mrq.config'\n\ntype TypeSecurePaths = { [path: string]: boolean }\n\nexport function getQuery(\n  req: FastifyRequest,\n  modelName: string,\n  options: IGetQueryOptions = {}\n) {\n  const securePaths = req.mongoose_conn.securePathsPerModel[modelName]\n\n  return getQueryInternal(req.query, securePaths, options)\n}\n\nconst getQueryInternal = memoize(getQueryInternal_, memoOptions)\n\nfunction getQueryInternal_(\n  query: any,\n  securePaths: TypeSecurePaths,\n  options: IGetQueryOptions = {}\n): MrqQuery {\n  const filter = getFilter(query.filter)\n\n  const sort = getSort(query.sort)\n\n  const select = getSelect(query.select, securePaths, options)\n\n  const populate = getPopulate(query.populate)\n\n  const skip = query.skip ? parseInt(query.skip) : 0\n\n  const limit = query.limit ? parseInt(query.limit) : 0\n\n  return {\n    filter,\n    sort,\n    select,\n    populate,\n    skip,\n    limit,\n  }\n}\n\nfunction getFilter(filter: string) {\n  const filterStr = typeof filter !== 'string' ? JSON.stringify(filter) : filter\n\n  return parseFilter(filterStr) ?? {}\n}\n\nexport function getSort(fields: string) {\n  if (!fields) return {}\n\n  const sort: Record<string, 1 | -1> = {}\n\n  const fieldList = fields.split(',').map((str) => str.trim())\n\n  for (const field of fieldList) {\n    if (field.startsWith('-')) sort[field.slice(1)] = -1\n    else sort[field] = 1\n  }\n\n  return parseSort(JSON.stringify(sort))\n}\n\nexport function getSelect(\n  fields: string = '',\n  securePaths: TypeSecurePaths = {},\n  options: IGetQueryOptions = {}\n) {\n  if (options.ignoreSelect) return {}\n\n  const select: Record<string, 1 | 0> = {}\n\n  const fieldList = fields\n    .split(',')\n    .map((str) => str.trim())\n    .filter(Boolean)\n\n  if (!fieldList.length)\n    throw httpErrors.methodNotAllowed(\n      `${IMPLICIT_SELECT_ALL_NOT_ALLOWED}: use select=all query param`\n    )\n\n  if (fieldList.includes('all'))\n    return transformSecurePathsToSelect(securePaths)\n\n  for (const field of fieldList) {\n    if (securePaths[field]) continue\n\n    if (field.startsWith('-')) select[field.slice(1)] = 0\n    else select[field] = 1\n  }\n\n  return parseProject(JSON.stringify(select))\n}\n\nfunction transformSecurePathsToSelect(securePaths: TypeSecurePaths) {\n  const select: Record<string, 1 | 0> = {}\n\n  for (const [path, value] of Object.entries(securePaths)) {\n    if (value) select[path] = 0\n  }\n\n  return select\n}\n\nfunction getPopulate(populate: string): any {\n  return parsePopulate(populate)\n}\n\nfunction parsePopulate(populate: string) {\n  try {\n    const parsed = JSON.parse(populate)\n\n    if (typeof parsed !== 'object') throw 1\n\n    // Sanitize normally is being done in parseFilter\n    return parseFilter(JSON.stringify(parsed))\n  } catch (e) {\n    return populate\n  }\n}\n"],
  "mappings": "AAAA,OAAO,aAAa;AAEpB,SAAS,kBAAkB;AAC3B,SAAS,aAAa,WAAW,oBAAoB;AACrD,SAAS,uCAAuC;AAEhD,SAAS,mBAAmB;AAIrB,SAAS,SACd,KACA,WACA,UAA4B,CAAC,GAC7B;AACA,QAAM,cAAc,IAAI,cAAc,oBAAoB,SAAS;AAEnE,SAAO,iBAAiB,IAAI,OAAO,aAAa,OAAO;AACzD;AAEA,MAAM,mBAAmB,QAAQ,mBAAmB,WAAW;AAE/D,SAAS,kBACP,OACA,aACA,UAA4B,CAAC,GACnB;AACV,QAAM,SAAS,UAAU,MAAM,MAAM;AAErC,QAAM,OAAO,QAAQ,MAAM,IAAI;AAE/B,QAAM,SAAS,UAAU,MAAM,QAAQ,aAAa,OAAO;AAE3D,QAAM,WAAW,YAAY,MAAM,QAAQ;AAE3C,QAAM,OAAO,MAAM,OAAO,SAAS,MAAM,IAAI,IAAI;AAEjD,QAAM,QAAQ,MAAM,QAAQ,SAAS,MAAM,KAAK,IAAI;AAEpD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEA,SAAS,UAAU,QAAgB;AACjC,QAAM,YAAY,OAAO,WAAW,WAAW,KAAK,UAAU,MAAM,IAAI;AAExE,SAAO,YAAY,SAAS,KAAK,CAAC;AACpC;AAEO,SAAS,QAAQ,QAAgB;AACtC,MAAI,CAAC,OAAQ,QAAO,CAAC;AAErB,QAAM,OAA+B,CAAC;AAEtC,QAAM,YAAY,OAAO,MAAM,GAAG,EAAE,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC;AAE3D,aAAW,SAAS,WAAW;AAC7B,QAAI,MAAM,WAAW,GAAG,EAAG,MAAK,MAAM,MAAM,CAAC,CAAC,IAAI;AAAA,QAC7C,MAAK,KAAK,IAAI;AAAA,EACrB;AAEA,SAAO,UAAU,KAAK,UAAU,IAAI,CAAC;AACvC;AAEO,SAAS,UACd,SAAiB,IACjB,cAA+B,CAAC,GAChC,UAA4B,CAAC,GAC7B;AACA,MAAI,QAAQ,aAAc,QAAO,CAAC;AAElC,QAAM,SAAgC,CAAC;AAEvC,QAAM,YAAY,OACf,MAAM,GAAG,EACT,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,EACvB,OAAO,OAAO;AAEjB,MAAI,CAAC,UAAU;AACb,UAAM,WAAW;AAAA,MACf,GAAG,+BAA+B;AAAA,IACpC;AAEF,MAAI,UAAU,SAAS,KAAK;AAC1B,WAAO,6BAA6B,WAAW;AAEjD,aAAW,SAAS,WAAW;AAC7B,QAAI,YAAY,KAAK,EAAG;AAExB,QAAI,MAAM,WAAW,GAAG,EAAG,QAAO,MAAM,MAAM,CAAC,CAAC,IAAI;AAAA,QAC/C,QAAO,KAAK,IAAI;AAAA,EACvB;AAEA,SAAO,aAAa,KAAK,UAAU,MAAM,CAAC;AAC5C;AAEA,SAAS,6BAA6B,aAA8B;AAClE,QAAM,SAAgC,CAAC;AAEvC,aAAW,CAAC,MAAM,KAAK,KAAK,OAAO,QAAQ,WAAW,GAAG;AACvD,QAAI,MAAO,QAAO,IAAI,IAAI;AAAA,EAC5B;AAEA,SAAO;AACT;AAEA,SAAS,YAAY,UAAuB;AAC1C,SAAO,cAAc,QAAQ;AAC/B;AAEA,SAAS,cAAc,UAAkB;AACvC,MAAI;AACF,UAAM,SAAS,KAAK,MAAM,QAAQ;AAElC,QAAI,OAAO,WAAW,SAAU,OAAM;AAGtC,WAAO,YAAY,KAAK,UAAU,MAAM,CAAC;AAAA,EAC3C,SAAS,GAAG;AACV,WAAO;AAAA,EACT;AACF;",
  "names": []
}
