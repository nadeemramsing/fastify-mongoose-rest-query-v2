{
  "version": 3,
  "sources": ["../../src/routes/sub.route.ts"],
  "sourcesContent": ["import { Schema } from 'mongoose'\nimport { FastifyInstance } from 'fastify'\nimport { ISchemaOption } from '../mrq.interfaces'\nimport { getSubHandler } from '../handler/sub.handler'\nimport { getChildarray } from '../utils/mongoose.utils'\nimport { countCharacter } from '../utils/misc.utils'\n\nexport const subRoute =\n  (modelName: string, schemaOptions: Omit<ISchemaOption, 'endpointName'>) =>\n  async (app: FastifyInstance) => {\n    const { schema } = schemaOptions\n\n    for (const [subPathName, schemaInstance] of Object.entries(schema.obj)) {\n      if (!Array.isArray(schemaInstance)) continue\n\n      schemaOptions.subPathName += subPathName + ':'\n\n      const subHandler = getSubHandler(modelName, schemaOptions)\n\n      let prefix = `/${subPathName}`\n\n      app.get(prefix, subHandler.getByQuery)\n\n      app.get(`${prefix}/count`, subHandler.count)\n\n      app.get(`${prefix}/distinct/:path`, subHandler.distinct)\n\n      app.post(prefix, subHandler.create)\n\n      app.put(prefix, subHandler.updateMany)\n\n      app.put(`${prefix}/overwrite`, subHandler.updateMany)\n\n      app.delete(prefix, subHandler.deleteByQuery)\n\n      prefix += `/:${schemaOptions.subIdName}`\n\n      app.get(prefix, subHandler.getById)\n\n      app.put(prefix, subHandler.updateById)\n\n      app.put(`${prefix}/overwrite`, subHandler.updateById)\n\n      app.delete(prefix, subHandler.deleteById)\n\n      const noOfColons = countCharacter(':', schemaOptions.subPathName)\n      if (noOfColons > 2) continue\n\n      for (const childSchemaInstance of schemaInstance) {\n        const childRoute = subRoute(modelName, {\n          ...schemaOptions,\n          schema: childSchemaInstance as Schema,\n          getSubarray: getChildarray,\n          subIdName: 'childId',\n        })\n\n        app.register(childRoute, { prefix })\n      }\n    }\n  }\n"],
  "mappings": "AAGA,SAAS,qBAAqB;AAC9B,SAAS,qBAAqB;AAC9B,SAAS,sBAAsB;AAExB,MAAM,WACX,CAAC,WAAmB,kBACpB,OAAO,QAAyB;AAC9B,QAAM,EAAE,OAAO,IAAI;AAEnB,aAAW,CAAC,aAAa,cAAc,KAAK,OAAO,QAAQ,OAAO,GAAG,GAAG;AACtE,QAAI,CAAC,MAAM,QAAQ,cAAc,EAAG;AAEpC,kBAAc,eAAe,cAAc;AAE3C,UAAM,aAAa,cAAc,WAAW,aAAa;AAEzD,QAAI,SAAS,IAAI,WAAW;AAE5B,QAAI,IAAI,QAAQ,WAAW,UAAU;AAErC,QAAI,IAAI,GAAG,MAAM,UAAU,WAAW,KAAK;AAE3C,QAAI,IAAI,GAAG,MAAM,mBAAmB,WAAW,QAAQ;AAEvD,QAAI,KAAK,QAAQ,WAAW,MAAM;AAElC,QAAI,IAAI,QAAQ,WAAW,UAAU;AAErC,QAAI,IAAI,GAAG,MAAM,cAAc,WAAW,UAAU;AAEpD,QAAI,OAAO,QAAQ,WAAW,aAAa;AAE3C,cAAU,KAAK,cAAc,SAAS;AAEtC,QAAI,IAAI,QAAQ,WAAW,OAAO;AAElC,QAAI,IAAI,QAAQ,WAAW,UAAU;AAErC,QAAI,IAAI,GAAG,MAAM,cAAc,WAAW,UAAU;AAEpD,QAAI,OAAO,QAAQ,WAAW,UAAU;AAExC,UAAM,aAAa,eAAe,KAAK,cAAc,WAAW;AAChE,QAAI,aAAa,EAAG;AAEpB,eAAW,uBAAuB,gBAAgB;AAChD,YAAM,aAAa,SAAS,WAAW;AAAA,QACrC,GAAG;AAAA,QACH,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,WAAW;AAAA,MACb,CAAC;AAED,UAAI,SAAS,YAAY,EAAE,OAAO,CAAC;AAAA,IACrC;AAAA,EACF;AACF;",
  "names": []
}
