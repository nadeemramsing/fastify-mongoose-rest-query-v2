{
  "version": 3,
  "sources": ["../../src/services/sub.service.ts"],
  "sourcesContent": ["import { ObjectId } from 'bson'\nimport { Model, Types } from 'mongoose'\nimport { FastifyRequest } from 'fastify'\nimport {\n  drop,\n  filter,\n  find,\n  isNil,\n  map,\n  orderBy,\n  partition,\n  pick,\n  pipe,\n  pluck,\n  reject,\n  size,\n  take,\n  uniq,\n} from 'lodash/fp'\nimport sift from 'sift'\nimport { MrqDocument, MrqQuery } from '../mrq.interfaces'\nimport { toJSONOptions } from '../mrq.config'\nimport { useSession } from '../utils/mongoose.utils'\nimport { httpErrors } from '@fastify/sensible'\nimport {\n  IMPLICIT_DELETE_ALL_NOT_ALLOWED,\n  NO_SUBITEM_FOUND,\n  SUBITEM_NOT_FOUND,\n} from '../mrq.errors'\n\ninterface IBaseOptions {\n  body: any\n  doc: MrqDocument\n  query: Omit<MrqQuery, 'populate'>\n  Model: Model<any>\n  path: string\n  req: FastifyRequest\n  subarray: any[] | Types.DocumentArray<Types.Subdocument>\n  subId: string\n}\n\nexport async function getByQuery({\n  query,\n  subarray,\n}: Pick<IBaseOptions, 'query' | 'subarray'>) {\n  return pipe(\n    filter(sift(query.filter)),\n    query.sort.sortFieldsArr.length\n      ? orderBy(query.sort.sortFieldsArr, query.sort.sortOrderArr)\n      : (x) => x,\n    drop(query.skip),\n    take(query.limit),\n    map(query.select.length > 1 ? pick(query.select) : (x) => x)\n  )(subarray)\n}\n\n// ---\n\nexport async function count({\n  query,\n  subarray,\n}: Pick<IBaseOptions, 'query' | 'subarray'>) {\n  return pipe(filter(sift(query.filter)), size)(subarray)\n}\n\n// ---\n\nexport async function distinct({\n  query,\n  path,\n  subarray,\n}: Pick<IBaseOptions, 'query' | 'path' | 'subarray'>) {\n  return pipe(\n    filter(sift(query.filter)),\n    pluck(path),\n    uniq,\n    reject(isNil)\n  )(subarray)\n}\n\n// ---\n\nexport async function create({\n  body,\n  doc,\n  Model,\n  req,\n  subarray,\n}: Pick<IBaseOptions, 'body' | 'doc' | 'Model' | 'req' | 'subarray'>) {\n  const _prev = doc.toJSON(toJSONOptions)\n\n  const idsMap = body\n    .map((item: any) => ((item._id = item._id ?? new ObjectId()), item))\n    .reduce((acc: {}, v: any) => ({ ...acc, [v._id]: true }), {})\n\n  for (const item of body) subarray.push(item)\n\n  await useSession(\n    Model,\n    req,\n    // @ts-ignore: custom arg req\n    (session?: ClientSession) => doc.save({ req, session, _prev })\n  )\n\n  const subarraySaved = subarray.map((subitem) => subitem.toJSON(toJSONOptions))\n\n  const query = req.query as { returnAll: string }\n  const shouldReturnAll = query.returnAll === 'true'\n\n  if (shouldReturnAll) return subarraySaved\n\n  return subarraySaved.filter((subitem) => idsMap[subitem._id])\n}\n\n// ---\n\nexport async function updateMany({\n  body,\n  doc,\n  Model,\n  req,\n  subarray,\n}: Pick<IBaseOptions, 'body' | 'doc' | 'Model' | 'req' | 'subarray'> & {\n  subarray: Types.DocumentArray<Types.Subdocument>\n}) {\n  const _prev = doc.toJSON(toJSONOptions)\n\n  const bodyIdsMap = body.reduce(\n    (acc: {}, v: any) => ({ ...acc, [v._id]: true }),\n    {}\n  )\n\n  const [subitemsToUpdate, subitemsToNotUpdate] = partition(\n    (subitem) => bodyIdsMap[subitem._id],\n    subarray\n  )\n\n  for (const item of body) {\n    const subitem = subarray.id(item._id)\n\n    if (!subitem) continue\n\n    subitem.set(item)\n  }\n\n  if (req.routeOptions.url?.endsWith?.('/overwrite'))\n    for (const subitem of subitemsToNotUpdate) subitem.deleteOne()\n\n  await useSession(\n    Model,\n    req,\n    // @ts-ignore: custom arg req\n    (session?: ClientSession) => doc.save({ req, session, _prev })\n  )\n\n  const query = req.query as { returnAll: string }\n  const shouldReturnAll = query.returnAll === 'true'\n\n  return shouldReturnAll\n    ? subarray.map((subitem) => subitem.toJSON(toJSONOptions))\n    : subitemsToUpdate.map((subitem) => subitem.toJSON(toJSONOptions))\n}\n\n// ---\n\nexport async function deleteByQuery({\n  doc,\n  query,\n  Model,\n  req,\n  subarray,\n}: Pick<IBaseOptions, 'doc' | 'query' | 'Model' | 'req' | 'subarray'> & {\n  subarray: Types.DocumentArray<Types.Subdocument>\n}) {\n  const isDeleteAll = !Object.keys(query.filter).length\n\n  if (isDeleteAll)\n    throw httpErrors.methodNotAllowed(IMPLICIT_DELETE_ALL_NOT_ALLOWED)\n\n  const subarrayToDelete = filter(\n    sift(query.filter),\n    subarray\n  ) as Types.DocumentArray<Types.Subdocument>\n\n  if (subarrayToDelete.length === 0) throw httpErrors.notFound(NO_SUBITEM_FOUND)\n\n  const _prev = doc.toJSON(toJSONOptions)\n\n  for (const subitem of subarrayToDelete) subitem.deleteOne()\n\n  await useSession(\n    Model,\n    req,\n    // @ts-ignore: custom arg req\n    (session?: ClientSession) => doc.save({ req, session, _prev })\n  )\n\n  return subarray.map((subitem) => subitem.toJSON(toJSONOptions))\n}\n\n// ---\n\nexport async function getById({\n  query,\n  subarray,\n  subId,\n}: Pick<IBaseOptions, 'query' | 'subarray' | 'subId'>) {\n  const subitem = pipe(\n    find((subitem: { _id: ObjectId }) => subitem._id.equals(subId)),\n    query.select.length > 1 ? pick(query.select) : (x) => x\n  )(subarray)\n\n  if (!subitem || !Object.keys(subitem).length)\n    throw httpErrors.notFound(SUBITEM_NOT_FOUND)\n\n  return subitem\n}\n\n// ---\n\nexport async function updateById({\n  body,\n  doc,\n  Model,\n  req,\n  subarray,\n  subId,\n}: Pick<\n  IBaseOptions,\n  'body' | 'doc' | 'Model' | 'req' | 'subarray' | 'subId'\n> & {\n  subarray: Types.DocumentArray<Types.Subdocument>\n}) {\n  const _prev = doc.toJSON(toJSONOptions)\n\n  const subitem = subarray.id(subId)\n\n  if (!subitem) throw httpErrors.notFound(SUBITEM_NOT_FOUND)\n\n  if (req.routeOptions.url?.endsWith?.('/overwrite')) subitem.overwrite(body)\n  else subitem.set(body)\n\n  await useSession(\n    Model,\n    req,\n    // @ts-ignore: custom arg req\n    (session?: ClientSession) => doc.save({ req, session, _prev })\n  )\n\n  const query = req.query as { returnAll: string }\n  const shouldReturnAll = query.returnAll === 'true'\n\n  return shouldReturnAll\n    ? subarray.map((subitem) => subitem.toJSON(toJSONOptions))\n    : subitem.toJSON(toJSONOptions)\n}\n\n// ---\n\nexport async function deleteById({\n  doc,\n  Model,\n  req,\n  subarray,\n  subId,\n}: Pick<IBaseOptions, 'doc' | 'Model' | 'req' | 'subarray' | 'subId'> & {\n  subarray: Types.DocumentArray<Types.Subdocument>\n}) {\n  const _prev = doc.toJSON(toJSONOptions)\n\n  const subitem = subarray.id(subId)\n\n  if (!subitem) throw httpErrors.notFound(SUBITEM_NOT_FOUND)\n\n  subitem.deleteOne()\n\n  await useSession(\n    Model,\n    req,\n    // @ts-ignore: custom arg req\n    (session?: ClientSession) => doc.save({ req, session, _prev })\n  )\n\n  return subarray.map((subitem) => subitem.toJSON(toJSONOptions))\n}\n"],
  "mappings": "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",
  "names": ["Model", "subitem"]
}
